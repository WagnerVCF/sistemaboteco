<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABnGAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAABghSURBVHja7V15nM31+n/PbhZLzCDERFwUikIUkUpkKYlS+CFtyHJNSgySm0jWlCUu
        QpaubBVNNy0iWsgyumIs2acxjFkYM/eZnztnPufM+Z4558x3eT5fn+f5Q6+YM5/zeZ7Psy+AAn8hHBXR
        EF0xCG9iPtbjG+zAbziIYziMvfTfW/AZVmMOXsNTaIZYlEOwujQ7QARq4gmMxTLsxAmkIhO5HjEbF3GG
        GGML3kd/3IVoBKlLlBNK416MwBokIaMIomszw1lsx2w8QxJBsYFEEILaJOo3IdlPwrtiFvZjOtqSWlDA
        HkLRnN7sYVzVifgFmIpvMRg3qSvm/PJbkIF3WnfSi0phJ17CjeqqOUJNTCXzLddwvIIf0Acl1YVzgigi
        yW4TiJ+PGfgIt6lr5wLVsQDpJpL/Gu4l7yBcXb710ApbTSf+NbyImaioCGAlBKEXjlpE/jzMwWrUUGSw
        zup/STdf339MQANFCisgDMPJN89lgDvQVJHDfOE/kHRwLhPcjrqKJObCkzjLhvx5uAFVFFHMg/uRxIr8
        ebgQZRRhzIFYyxw/zxHCeJUzNAPCMYsh+fPwNB5Q5DEeeiKNKQPk4iuVKDI+7PsrW/Ln4irGKjVgrPM3
        gTH58/AkmisyGQd340/mDJCLBQhThDIGQjGfPflzcRb3KVIZA01IwOZKgItVmtgY/T9VCvLnIhmtFbn0
        h7o4JAkD5GIaAhXB9IaXDaj0NQr3oZoimL5QCl9IQ/68ToLeimT6wj04JxED5GIVIhTR9ITRUpE/F8dV
        1bCeEIWNkjHAZfRSZNMP6uCYZAyQi5nKE9APni6yrZsfblPNpPrBZOnInxcSbqwIp5cFsEFCBriCfop0
        +kAV/C4hA+TiH4p0+kBznJeSAZajxPVHrABEkPFzM5qhHbqQ8fYsBuEVjMBgPIee6IpH0BK1EENi3fvK
        mar4mASqfAyw/XoyAyNRHR0xHNPxCX7EUSTjIi6R7X4FOY7hCllIp/+bgj/xK9ZjNkaiGzl4pb349LIY
        zaAJzPdgUE37Ez4YseiEsViHQ34Ua2bQJSVgEp5E7SLEZTAeM3UCgB54Hq3sTfwYdMD7OEAvvbhXlYkj
        WIoeuMlj8KQeyQ2ZGOASKUHbvvuGiMc2nbvzMrEHU+jVhHuwBj6RKhzcx47ED0QDvGtgaDYZS8hQDNV0
        CVdKxAJD7Ef+2uTdHjb84s5gLppq+AmVyb3KkYQB4u0WkXseiaZd3gmMQwW357gRqyRhgCl2Iv+tWGTy
        KKar2EzKIMDNWWqRjy0DA8yyS0YwlCz0PRb50nEo5eZEbehvVErYJIjASAuHsVzGHDeqIAAv6OB+Kgbw
        Am7AO37P29ZrFtdK3FzoXOGYxt4YnCE/A1TEhyzi8JvJBinsEn7PngEC5CZ/WSxmc5lbyPRzha6MBkW5
        bxAJkFv3v4NsRtf5r0JzOSMYMag7nCB3uDfOggm8nm2BDwp5BI0tnRRaFL4iMwP0wF8MO27iEeLiDcSz
        bRnLxnPykr8e9rO81HNo73LSWOxiygAZ6CZv0HcJW7H6XaG1LVy7hi6grawM0J+Z9ne2BCa6qIH6OMJU
        WjWWVfwfYG1bn3N5WcFkHHI8Z5KcTeJBeJd9iHWtizfQmqHBmovvUVZGBmgkQR9emkuxVRSxBL9TLpWx
        LDwY06VItH7mMpr5BVYhK4kbQ+6UIs2aV3Dp7GI1wAlmJ7xKTCkdBBDXylJvtwaRwslLkkzg5gS2k48B
        KrGexOtaN9jE6ewjmZ3vlJv8JXvoZnHm3zcc43T2Fsw8gT0aFY2MIYxx/M997514xdHM6gQ3yLdeti7r
        zJo7Z7CjU/xitioILR70xmXJuu8mOp1/CCsfYKB8EcBZkpE/b0OH2FvcjlF90Hn5ZoZHS1Jr79w8Uk/4
        BrUYxTAOyLdGrolkszivFYj0cqpg5LNNzDlKIQW8KNEw5gKcLphaoVjI5lxvyBcDnCoh+XPxuVNecCyb
        QHVn2RggEp9KyQCJqCR8i4FMWkUOumlkYQ7lpRvAcg3PopHwLZ5iMlF0tXxLY27DKSkZIB2PC9+iLS6o
        cnD/oAPzHhttHC58i7tY7BRPkXFvWF8pJ/Hl4WThW1RnsVdwO2LkY4BhkpI/F3MR7PgWFU2cYOIpQC1h
        R+A4aRlghWBwcTBlpewGCMA0aRlgkxAJKM+gS2infHUAeTG0f0rLAOJE3hgGFU2TZVQAEdLM3SqMe4UX
        F4OfLfcApNwaGoHV0jLAPoEBovETq9C0kgAmS4Bo0sBWniVbxlLwPAiXagCrdvGl1SrgAGrIygArpGWA
        3WT758ON+I+lZ5nqwxoMZgzwsbQMsEtggBqWRgJPoikkhVAskpYBdpDmz4c7cMbCk8zTnHEuQSBohrQM
        sFkoDG1Fbph1iekWkBjekJYBxD3dnf1YW6MXLpZ7R9jfpWWAeUIyqBeyLDrFGdn3A/WzRTrYutaQaS5z
        i6SDxxmPhfKMo4Rv8bZFZ9iPOpAcWlhoPhUv9lYwjLEEllpyhisYDOmhumSNoe6y72WwxSI/JEZ+Bign
        YWPYteBLXcd3qGxJHPAYWsIGIGswWAwE325BGCgLQ2XfCZAPk6RkgHWIsjQKsEzO9K87GCBlb6C4lcf8
        WMavMs4B0gI5OwPiHOc3f0JIEh6AjaA+TktHfnEge2l8aXLs/0nYCipin3QMkCwkYKviDxN/cxoGypr7
        14JS+Fw6Bjgk7A5oZmIo6yJeQxhsBoFkUMnGAAlCKjjWtFmhyfT6bUf+POA4cNkzTnfywathuQmezJ/o
        aTfhnw/3spy67ykG39/lG8TgXYNjAXvQ0S6Bn8JQmemiKG1R3KzQdyiB/zMsIJyJpbgNNoYIfCJZR8CN
        br9HY6wxYFJIEgbZJ+qnBaOlYoBlmkVYZfCsrm2i5+l33V3E3d2JhkJtkqTAZcSKN5iDIR6/yy14Awd0
        GBp1Af9CO6Hu0D08iEQcJz+qidyVQVUkCgYlo3kR3yYAtTCSJEGG3yx2iojfWUg3acFDDrvjJObiPi9+
        gimEMV/G7NwPEOMlU3fHAvzho1WQjC/xChp5Ne/zYRx0+dlPyVWsJCcLDJQmJ/ieD954KGoSG7yNzThK
        +vyyhwDvCWzDQiL9PU5jqLUhCF1xyK3H8DPiyS6QThbcZWlvjS8uWQ+/wt01cT96YxSxzxKswkYk4HOs
        xHxMxXgMI3FfB+V86O+JQpzHCcunsB4vo36RFgSrjMAmKRjgoNCHG+WH4RVE6i4CJemdl0I4/bw/wZ3K
        eN8LxXIVf5J7/QLqytI48qoUDLDI8U6DSNS+hYom31IAuYVf+OBjZOMIlqMvSSD2/YNNWQxbLKoSr5fw
        Dn/7/8rcliauaIkm0e/PwurLZC8swhO8x0iVJr3IPw1c03HeLv9raTmOsaYsaw5CK7IbitNHlY7t5J7W
        5ysLXmEyc1sbFzguLxhzBL99Bxl4pQ0V/LdiIvn6+pSTLyQHkqV5WI95k0iaMI3/Fvzu8ro2opshW7sD
        yIyboHPVUV6IuRW/2CGnzRvucKsQAnrJTQ1DOr5CH1TRMW0bQR79BJdwj359xW8LdU1MwMo++6IDtCOE
        pE+Cppm4iy72Ppcd475DMKqT7f6JocP0c/A9t/riaDoSVwY4SuZTQRA21eO//QtfYgzakqcQ6rPAL0O/
        pzc+wAFTtikeI7+GVS5xMNvysA8cOjME87zM5+3FYpIbnUmLRyPKw0WHk/VQjTz8HpiMr8nYM3ORZgoG
        cGKBagzGLrvXmPcIGXjf9gRewgnyE9ZiLsYTg/dHTzIXH0VX+vN5DMXrRPSPyb5IQrJFi2dS8CyndbM8
        ncGFjnrcoGJOOL9CdkIGMUU6/clF2p3Eg3wY4BaGtQHJwijmhpJONPCM3yOWDwuMYicDPnIshwjCFBuS
        Pw9n8dk4Fmv57G1nPCHo/0a2fP/Xwly9+ciAPn6XUxmBEx0lICUw36bkz8Pf+IycLk02M5dr2U1WST48
        IulIK28DQ6/zkQFtmCSHs4RJ/DHYbGPy52EianFhgGBMYFEluFII6jZ3W4VnLxzLpwGtIoMisX1oIJwo
        DM3IBjhnawb4HbX5qIF7/Kp+0Q8v4OlCZwpDayyzsSWQg2GcMgMDLfUGpml040fgIcyzrTv4VbEzmTpC
        JGZaZgms89hiEYL6GIWfmKyN1zczwGoBXYxFS2W2eqULK+EZrMAxKQfdaeM7VqWGAjTigpstMP7cb+EJ
        dJvKvY1U1TqcYl/R6H3ko4rZpA/B7RiDpzRYoL7J84ST0M7tORpgEtprFH9GoRHiyG85awMGuCTUPpoA
        UWiDOSRG86bgPKzxb27H16Z9/f0a5K+CL+hvU/EZemtaB6VIcryGBCRLzgKTzCJ+BXr1awWnajfu0PiX
        tUjImvHVdwiJH2fSfihEB3fiVdTRbBItjXvxFn5llc/wDb8zpL7ZRXPWw9/xQ6FL2oyqGj9RBUsML6BI
        cAr8iPXKY1zKtHLwB7mJ92teVAAqozuWSdLy6orn0MTI4u+/oT9W4biG7bxQ0w8ti9EGjpW9iPc0OnwC
        0E+jCPQ8vkU8mms2hZRAC8wztLLXqHDQEGPi+7HkNi3GYY8NTlcwCzdofEIQHiLxZIzm76XRRRuInkWQ
        8BzJrTjNoQ6haIbZ0jHBUn17igNQEZ3oGhK9Wq+WjbnCVk5XqIp3dba107BcQ/TnsVw/r35bDk5iDV5A
        bbeF4CG4DxtNrfUtfm2Abn3PZdEaE/GTTy0fV/FPD52soXSdS3QaLpmOz9FFc55GCF706fdkk3RbRIZt
        VTcGYjkMkyib+FeRk5C8gCB6VyOxxa/USQ4JocoejcgHsbKYTHCJjL6nPES+wzCUtLzvn5uJfZiJtihZ
        6BPvpDPLIQeyhToIP0M7d5GVfKRYhshG0queMwV5smWnH+1kmaTzZ6MzvUptKE+fXZxVFqn4FI8VMg/L
        YFwRXUVccHZxJhM3Iov6T11Ms+5F9LAGkKrogOnkv5/yYgVlFunz3VhA775aEV/vdqzTIcKfRgqmq0sr
        dij6Wrps3vtYwA3+Eb8cCU79dF0KxnswCAuUTTTq4XGMwkfYSgL4CJlkZ+lnz5OFfgrHyPjcgdX0SU+T
        EK5QZL9eMH3SXh3dyw8LTfrt6mNvkRV4TKiF9BoC0VJ3azebRGkTr/NTYWR0VkAV/I2k0H2kIhqjDplk
        FYlBvB2JUJmEtN6h3EQ87zLvtyt7KZDqe7dQOF7GCYO4cZwpnStRpBx+MCS5m4nFuNnpd/ViXld0FQN8
        Ff1TDFwEnUOOZB9Dx7AE4V6sMHQ+wdekgERF8yrzbMFUXwpEozHf8Eh9BhlmjxqSpggjn2WKTjN4POEv
        TrO/I4U5Qxxxg/fzRm/APJOqYtLoHb1EwlS/4uUb0BFLTCB+Pgs0Fn53dWxj3SXg5dzhELKvzWx0ziY7
        /x9oTkqneGwQSQbii/jK5MWVW5xSTu0Zl5B4nRPsbok5k0wO32Q8RsZhmM++SjTp+xFYS8blFQtO/r7g
        kQSTpuXKAJluyuLdBn2s3PhzCb9jGV5HD9KuN5GRGKJp4kWSe1gPnTAYs7Dd0jVV6WRfF8iuujjAlgXG
        elPTs4EJtybjIBLwIRlz48m+HoR+xBS9yV6IwxhMwmx8it9wmskUsmNOpddxbOciLSlKugbS5fIsic4h
        4Z6JLLYF2/8Wsp2VSJnxPOX3RflcdyDJVhXx5uEVklEF8DSpMo6nPOISvCqUl5+tSFmM6vsaQo7wC5Zn
        TEELTwzQ2hZV8NYpqXGCKdiXZZ2AOB7fTdx8pSJjsTBJKIK/iel8xHhtBnhYksIGzih24Y1jecIFWo61
        t+NSFXoOtlZ33GhDlgnif2uVzN2q7H+dK+9CsYjhCf+jlQ+Is00vrLW4SUhxd2OYHj6Neu679rcq4umC
        54W6m1iGQWGNuqBOjBc7yIYzHOWpIWRycTvdZXfzQwMZZ7BkDAgVaNmeXnVOmYuvuquY36kIp2OJyyOO
        m63JsHdoeuGC3DYqAqArTnJEBMOwjN3pVhZuen1DEU1X3CZ0PrzMzrv6zrUvo4yJ41quD0xBK8ft3mtp
        qYr7YFUV1xTwaUU0nXGEMCCXW07gOOo4M0Afqfrc5cCPHeMY+C3PPOOcEg4kv1URTG/cL7TCD2JWxZSK
        Ls7jHr5TBDMgHthaGJHNywrIwPPOwxJPKYIZgMOECsFEVie7itEiAzzDMFZlB1zkaFqPwnp2oSAB3lTE
        MgR/FKaVcFtMt0RsAF+liGUInkBdxy0/x6xPYI2YBdiliGVQRqCT45Zb+TWayjj8Upycc0YRyyAc7rjl
        asxSQtsKGOAJA0dAXO8417HEvTQSWJ1sTwEDjFKEMgy/cZRfBuE9VidLKihbXKwIZRgeFTqFBrPKCZ4r
        mAK0XRHKwJBrQfVdO1xgFQv8H9QxaAaYwjzMwUBhPQanOYLp+cfqoEpBDcUZjuKrsviB0bn+ymeAoYpI
        huJnjvHSYVjC6FyH8xPBsxSRDEVxKtd4RufacO1IJZkMg7EvnkVDBwM8a8n4KneYjZH504D2KCIZipeE
        0osH2VRe/5a/Q7WeqgU0sSqgNhOP6yL6FfgAFxWJTPMDYvALixDQ8II5YQNVP7DhuM4xnTcSaywP/ySg
        vSM/QTBZEcgEfVvBsQllmoXnOE3s97TzQp0IVQpiAp4SuvGtibqkYTvGoEnhdrBy2KEIZILJ1d5x411M
        nh2Yhl0kdTqgvPuJINVwVBHIcLyC/sIMZrOG8F3CbjI/O6GSp8U8jckiVAQyHuOFZdmHDU8/ncN3mESk
        r1z0TiY1E8QcfN8xL6QcfjTwzR8im24Imnq/f+V5tmOX7YWfOswvI/oDLuAg2fdj8ChqINy3JQtjFXFM
        wR2ObvwQfKibqE/BXizHCLQlWy7Sv0WwcxVxTMEjwkKZt4r5WVmk43/GAgxGSzLwirUOvhS7diW74jnc
        VcxIQDpO4xeswHj0JNO9fBGrd72ECioKYFokoIOwRSDTayF/AcexlV77a3gc9Yns4dAVquEPRRxTUJzL
        V1RKOIt0+yF8iVl4Ge1Qiyz6EBgEDVQ5qGk41EMf1lVyxs8gEZswD6PQCy3oaZb2eq9yMeB+FQYyDccL
        OwQOkkY/h6Nkym3EfLyJAehIj/FGssmCYSp0Z1Wnbm98zxEKikAXdCZDLhYxKGmcePcGBnhtjigsLi7X
        24DTA8aqYhDTcLOhO9L9BFUQbh7+5DqZkwMsVYQxDQ+SkccO1irCmIbHnbaLM4GvFGFMLAurw48BflSE
        MQ3P4k5+DLBPEcY0TEFLfgyg6gHNwwtox48BUhRhTMN0dOXHACoOaB5m4Rl+DKAyAeZhBrrxY4CTijCW
        lISwAVUOYh6ex/0qDnA94xlhTggbmKMIYxr+rNWdZyX0NrlR8XrG+daWfriHOjioSGMKZgvtoYwgmN0W
        C7viLxxzgdfqgo8o8pjw/geDKQQiTsUDDccNjhExDCESM1SHsKG4A7eBNURjptoYYhh+i6ZgDxEYiCRF
        LAPCv/NwM6SAADTCHLU6StfkTwK60NOSCMJwD97BXrVFvNh4EsvRjWMZuDdeQSz6Yp1pk6zshmlk8sWT
        NC0BqSGKDJcR+AynlH/gNaYS6aegIyrCNlASd2AQPsFRNjPueWIyWfrj8QDKkyVlQ4hAXfTDEhxUASMX
        zMFpbMJrZDmVhe0hDDXQA3PJRFTD5XPpKRzDGgwhXV8K1xUEowoeJp5fgf3MFiGbVdl7lN7823iKpGIk
        rmMIR2W0xlAswi7SgPY3FC/iEHlGb+Ax1Lre3rxnCEUFNMOLmIMfccaG8YNUJGIlRqI9bnasfFDgVjVE
        kz7sg3fonSSSTMiS2rRLJUH/Ddk7w9CGVF64Iq9vEYRKuBu9MAGrsJukQoYkZL+CFPxB+n0GBuJBMnjL
        mD2uyY7uYwU0RHeMxkfYgZNIYziOJpOkVSJJrcnoj5aoSvo9UBHOCBcyGreiEwZhEj7GDzhC155h2UtP
        JWbcjfV4DyPIsW1KEktpd1P9h7KIRXM8iTjMxFr8ihPkUGYYKB0ukw1/BgeQgAUYi74k4GujPBFdvXUG
        iacoxJBj1ZrYYQDiSf8uxRf4iVyuk/iLVIavXkU2+ennidjHsAdfYzX5JhPIkOtNNvzt9M5LcyzLVuDM
        EOFkfFUgCdEID5MhORxvYgqJ6gVYjjXEGt+QLbGHTLXjSMJ+/Iyt9KrXk5u2iEg9DW/hdTyHR0m61CJy
        lyPmUmZcEfBf9A3fFedhCvoAAAAASUVORK5CYII=
</value>
  </data>
</root>